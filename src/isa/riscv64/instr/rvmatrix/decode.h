/***************************************************************************************
* Copyright (c) 2020-2022 Institute of Computing Technology, Chinese Academy of Sciences
*
* NEMU is licensed under Mulan PSL v2.
* You can use this software according to the terms and conditions of the Mulan PSL v2.
* You may obtain a copy of Mulan PSL v2 at:
*          http://license.coscl.org.cn/MulanPSL2
*
* THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND,
* EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,
* MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
*
* See the Mulan PSL v2 for more details.
***************************************************************************************/

#ifdef CONFIG_RVMATRIX
#include <common.h>
static inline def_DHelper(mopcfg) {
  //虽然指令格式各不相同，但先暂时将rs1,imm13,rd的idx值读出来放到Decode结构里，等EHelper里再分别取需要的部分
  s->src1.reg = s->isa.instr.mcfg.rs1;
  s->src2.imm = (sword_t)s->isa.instr.mcfgi.imm13;
  s->dest.reg = s->isa.instr.mcfg.rd;
}

static inline def_DHelper(mldst) {
  s->src1.reg = s->isa.instr.mldst.rs1;
  s->src1.val = reg_l(s->src1.reg);
  s->src2.reg = s->isa.instr.mldst.rs2;
  s->src2.val = reg_l(s->src2.reg);
  s->dest.reg = s->isa.instr.mldst.td;
  s->m_eew = s->isa.instr.mldst.eew;
  s->m_width = 1 << s->m_eew;
  int m_lmul = s->isa.instr.mldst.lmul;
  if (m_lmul == 3){
    Log("Warning: Use mtype.mlmul");
    m_lmul = mtype->mlmul;
  }
  switch (m_lmul) {
    case 0 : s->m_groupsize  = 1; break;
    case 1 : s->m_groupsize  = 2; break;
    case 2 : s->m_groupsize  = 4; break;
  }
}

static inline def_DHelper(mcompute) {
  s->src1.reg = s->isa.instr.mcompute.ts1;
  s->src2.reg = s->isa.instr.mcompute.ts2_rs2;
  s->dest.reg = s->isa.instr.mcompute.td;
}


def_THelper(mopcfg) {
  def_INSTR_TAB("0000 ???????? ????? ??? ????? ????? ??", msettypei);
  def_INSTR_TAB("0001 ???????? ????? ??? ????? ????? ??", msettype);
  def_INSTR_TAB("0010 ???????? ????? ??? ????? ????? ??", msettilemi);
  def_INSTR_TAB("0011 ???????? ????? ??? ????? ????? ??", msettilem);
  def_INSTR_TAB("0100 ???????? ????? ??? ????? ????? ??", msettileki);
  def_INSTR_TAB("0101 ???????? ????? ??? ????? ????? ??", msettilek);
  def_INSTR_TAB("0110 ???????? ????? ??? ????? ????? ??", msettileni);
  def_INSTR_TAB("0111 ???????? ????? ??? ????? ????? ??", msettilen);
  
  return EXEC_ID_inv;
}

def_THelper(mldst) {
  def_INSTR_TAB("000001 0 ????? ????? ??? ?? ??? ????? ??", mla);
  def_INSTR_TAB("000010 0 ????? ????? ??? ?? ??? ????? ??", mlb);
  def_INSTR_TAB("000000 0 ????? ????? ??? ?? ??? ????? ??", mlc);
  def_INSTR_TAB("000101 0 ????? ????? ??? ?? ??? ????? ??", mlat);
  def_INSTR_TAB("000110 0 ????? ????? ??? ?? ??? ????? ??", mlbt);
  def_INSTR_TAB("000100 0 ????? ????? ??? ?? ??? ????? ??", mlct);
  
  def_INSTR_TAB("000001 1 ????? ????? ??? ?? ??? ????? ??", msa);
  def_INSTR_TAB("000010 1 ????? ????? ??? ?? ??? ????? ??", msb);
  def_INSTR_TAB("000000 1 ????? ????? ??? ?? ??? ????? ??", msc);
  def_INSTR_TAB("000101 1 ????? ????? ??? ?? ??? ????? ??", msat);
  def_INSTR_TAB("000110 1 ????? ????? ??? ?? ??? ????? ??", msbt);
  def_INSTR_TAB("000100 1 ????? ????? ??? ?? ??? ????? ??", msct);
  
  return EXEC_ID_inv;
}

def_THelper(mcompute) {
  def_INSTR_TAB("000000 0 ????? 00 ??? ??? 00 ??? ????? ??", mmau);
  def_INSTR_TAB("000000 0 ????? 01 ??? ??? 00 ??? ????? ??", msmau);
  def_INSTR_TAB("000000 0 ????? 10 ??? ??? 00 ??? ????? ??", mma);
  def_INSTR_TAB("000000 0 ????? 11 ??? ??? 00 ??? ????? ??", msma);
  def_INSTR_TAB("000000 1 ????? 00 ??? ??? 00 ??? ????? ??", mfma);

  def_INSTR_TAB("000001 0 ????? 00 ??? ??? 00 ??? ????? ??", mwmau);
  def_INSTR_TAB("000001 0 ????? 01 ??? ??? 00 ??? ????? ??", mswmau);
  def_INSTR_TAB("000001 0 ????? 10 ??? ??? 00 ??? ????? ??", mwma);
  def_INSTR_TAB("000001 0 ????? 11 ??? ??? 00 ??? ????? ??", mswma);
  def_INSTR_TAB("000001 1 ????? 00 ??? ??? 00 ??? ????? ??", mfwma);

  def_INSTR_TAB("000010 0 ????? 00 ??? ??? 00 ??? ????? ??", mqmau);
  def_INSTR_TAB("000010 0 ????? 01 ??? ??? 00 ??? ????? ??", msqmau);
  def_INSTR_TAB("000010 0 ????? 10 ??? ??? 00 ??? ????? ??", mqma);
  def_INSTR_TAB("000010 0 ????? 11 ??? ??? 00 ??? ????? ??", msqma);
  
  return EXEC_ID_inv;
}


// All RVMatrix instructions decode start from here
def_THelper(OP_M) { // 11_101
  def_INSTR_IDTAB("??????? ????? ????? 111 ????? ????? ??", mopcfg, mopcfg);
  def_INSTR_IDTAB("??????? ????? ????? 0?? ????? ????? ??", mldst, mldst);
  def_INSTR_IDTAB("??????? ????? ????? 110 ????? ????? ??", mcompute, mcompute);

  return EXEC_ID_inv;
}

#endif // CONFIG_RVMATRIX
